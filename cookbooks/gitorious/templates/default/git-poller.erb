#! /bin/sh
### BEGIN INIT INFO
# Provides:          Gitorious-GIT-Poller
# Required-Start:    stomp
# Required-Stop:     
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: GIT-Poller 
# Description:       Starts the GIT-Poller needed by Gitorious
### END INIT INFO

# Generated by Chef for <%= node[:fqdn] %>
# Local modifications will be overwritten.
ACTION="$@"
RETVAL=0
PROG="git-poller"
GIT_POLLER="cd /var/www/gitorious; RAILS_ENV=production /usr/bin/bundle exec /var/www/gitorious/script/poller $ACTION"
LOCK_FILE=/var/lock/git-poller
RETVAL=0
PROG="git-poller" 
do_check_pid() {
  PID_ACTIVE=`ps aux | grep ' poller' | grep -v 'grep' | wc -l`
  if [ $PID_ACTIVE == 0 ]; then
    RUNNING=0
  else
    RUNNING=2
  fi
}
 
runlevel=`runlevel | awk '{print $2}'`
 
start()
{
  do_check_pid
  if [ $RUNNING != 2 ] ; then
    echo -n "Starting $PROG: "
    /bin/su git -c "$GIT_POLLER"
    sleep 5
    if [ `ps auxx | grep poller | wc -l` -gt 1 ] ; then
      echo "success"
      RETVAL=0
    else
      echo "failure"
      RETVAL=1
    fi
  else
    echo -n "$PROG already running"
    RETVAL=1
  fi
  [ "$RETVAL" = 0 ] && touch $LOCK_FILE
}
 
stop()
{
  do_check_pid
  if [ $RUNNING == 0 ] ; then
    echo -n "$PROG not running"
  else
    echo -n "Stopping $PROG: "
    /bin/su git -c "$GIT_POLLER"
    STOPPROCCOUNT=`ps aux | grep ' poller'  | grep -v 'grep' | awk '{print $2}' | wc -l`
    if [ $STOPPROCCOUNT -gt 0 ]; then
         for proc in `ps aux | grep ' poller' | grep -v 'grep' | awk '{print $2}'`; do kill -9 $proc; done
    fi
  fi
  RETVAL=0
  # if we are in halt or reboot runlevel kill all running sessions
  # so the TCP connections are closed cleanly
  if [ "x$runlevel" = x0 -o "x$runlevel" = x6 ] ; then
      for proc in `ps aux | grep ' poller' | grep -v 'grep' | awk '{print $2}'`; do kill -9 $proc; done
  fi
  if [ -e $LOCK_FILE ]; then 
      rm -f $LOCK_FILE
  fi
}
 
case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart)
    stop
    sleep 5
    start
        ;;
  *)
    echo $"Usage: $0 {start|stop|restart|condrestart}"
    RETVAL=1
esac
exit $RETVAL